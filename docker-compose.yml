services:
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
      - "8000:8000"
    volumes:
      - .:/app
      - node_modules:/app/node_modules
      - frontend_node_modules:/app/apps/frontend/node_modules
      - /app/node_modules/.pnpm
      - huggingface_cache:/root/.cache/huggingface
    working_dir: /app
    command: pnpm turbo run dev --parallel --cache-dir=.turbo
    environment:
      - CHOKIDAR_USEPOLLING=true
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/mydatabase
      - PYTHONPATH=/app/apps/backend/src
      - LLM_PROVIDER=ollama
      - OLLAMA_URL=http://ollama:11434
      - OLLAMA_MODEL=mistral:7b-instruct
      # UNCOMMNET BELOW LINE FOR PROD
      # - COHERE_API_KEY=
      # - VECTOR_MODEL=False
      - VECTOR_MODEL=sentence-transformers/all-MiniLM-L6-v2
      - NODE_ENV=development
      - PYTHONUNBUFFERED=1
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_started
    restart: unless-stopped
    networks:
      - app-network

  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network


  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    environment:
      - OLLAMA_ORIGINS=http://localhost:5173,http://localhost:8000
      - OLLAMA_MODEL=mistral:7b-instruct
      - OLLAMA_NUM_PREDICT=1024
      - OLLAMA_CTX=4096
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          memory: 10g
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network


volumes:
  pgdata:
  ollama_data:
  node_modules:
  frontend_node_modules:
  huggingface_cache:

networks:
  app-network:
    driver: bridge
